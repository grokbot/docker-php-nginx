worker_processes  1;
user nginx www-data;

events {
    worker_connections  1024;
}

http {
    fastcgi_cache_path /var/cache/nginx2 levels=1:2 keys_zone=microcache:100m max_size=250m;

    include       mime.types;
    default_type  application/octet-stream;

    log_format  main_timed  '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for" '
                            '$request_time $upstream_response_time $pipe $upstream_cache_status';

    access_log /dev/stdout main_timed;
    error_log /dev/stderr info;

    keepalive_timeout  65;

    server {
        listen [::]:80 default_server;
        listen 80 default_server;
        server_name _;

        sendfile on;

        root /srv/www/web;
        index index.php index.html;

        tcp_nopush  on;
        tcp_nodelay on;

        gzip on;
        gzip_disable "msie6";
      	gzip_vary on;
      	gzip_proxied any;
      	gzip_comp_level 6;
      	gzip_buffers 16 8k;
      	gzip_http_version 1.1;
      	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

        client_max_body_size 25m;

        include /srv/www/rewrites.conf;

        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to index.php
            try_files $uri $uri/ /index.php?q=$uri&$args;
        }

        location = /favicon.ico {
                log_not_found off;
                access_log off;
        }

        location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
        }

        # redirect server error pages to the static page /50x.html
        #
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php$ {
            # Setup var defaults
            set $no_cache "";
            # If non GET/HEAD, don't cache & mark user as uncacheable for 1 second via cookie
            if ($request_method !~ ^(GET|HEAD)$) {
                set $no_cache "1";
            }
            # Drop no cache cookie if need be
            # (for some reason, add_header fails if included in prior if-block)
            if ($no_cache = "1") {
                add_header Set-Cookie "_mcnc=1; Max-Age=2; Path=/";
                add_header X-Microcachable "0";
            }
            # Bypass cache if no-cache cookie is set
            if ($http_cookie ~* "_mcnc") {
                        set $no_cache "1";
            }
            # For this build we don't want to cache
            set $no_cache "1";
            fastcgi_no_cache $no_cache;
            fastcgi_cache_bypass $no_cache;
            fastcgi_cache microcache;
            fastcgi_cache_key $server_name|$request_uri;
            fastcgi_cache_valid 404 30m;
            fastcgi_cache_valid 200 10s;
            fastcgi_max_temp_file_size 1M;
            fastcgi_cache_use_stale updating;
            fastcgi_pass_header Set-Cookie;
            fastcgi_pass_header Cookie;
            fastcgi_ignore_headers Cache-Control Expires Set-Cookie;
            fastcgi_keep_conn on;
            fastcgi_split_path_info ^(.+?\.php)(/.*)$;
	          if (!-f $document_root$fastcgi_script_name) {
		           return 404;
	          }
            fastcgi_pass  localhost:9000;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param SCRIPT_NAME $fastcgi_script_name;
            fastcgi_index index.php;
            include fastcgi_params;
        }

        location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
          access_log off;
          log_not_found off;
          expires 5d;
        }

        # deny access to . files, for security
        #
        location ~ /\. {
            log_not_found off;
            deny all;
        }
    }
}
